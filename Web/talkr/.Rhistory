MyMembershipFunction <<- triMF("MyTri", 1:10, c(3,6,8,1))
if (!'FuzzyToolkitUoN' %in% installed.packages()){
install.packages('FuzzyToolkitUoN')
}
library(FuzzyToolkitUoN)
MyMembershipFunction <<- triMF("MyTri", 1:10, c(3,6,8,1))
plot(MyTri)
plot(MyMembershipFunction)
FIS <<- tippertest()
showFIS(FIS)
#install.packages('FuzzyToolkitUoN')
if (!'FuzzyToolkitUoN' %in% installed.packages()){
install.packages('FuzzyToolkitUoN')
}
library(FuzzyToolkitUoN)
MF <<- gaussMF("myMF", 0:10, c(1.5,5,1))
plotMF(MF)
gensurf(tippertest(), ix1 = 1, ix2 = 2, ox1 = 1)
myMembershipFunction <- trapMF("NameOfMembershipFunction", 1:10, c(1,2,4,5,1))
defuzz(1:10,c(1.5, 5, 1),"centroid")
defuzz(1:10, c(1, 5),"centroid")
defuzz(1:10, c(1, 5),"centroid")
MF <<- gaussMF("myMF", 0:10, c(1.5,5,1))
plotMF(MF)
showMF(MF)
showFIS(MF)
N <- c(1, 4, 3, 5, 2)
x <- rnorm(N,0,1)
hist(x, col="lightblue")
q <- 1:15
plot(q)
hist(q)
x2 <- runif(15, 1.0, 3.0)
x2.round <- as.integer(trunc(x2))
hist(table(x2.round))
plot(x2.round)
table(x2.round)
x2 <- runif(15, 0.0, 4.0)
x2.round <- as.integer(trunc(x2))
table(x2)
hist(x2)
hist(x2.round)
hist(table(x2.round))
hist(table(x2.round))
plot(x2)
vector <- x2
# Plot of the input values linear function form
png(filename="mf.png", width=500, height=500)
plot(vector, type="o", col="blue", xlab="Preguntas", ylab="Respuesta media",
main="Valores medios de las respuestas a las preguntas basadas
en los principios de la CCP")
dev.off()
dev.off()
# Grouped Histogram of the answer values
vector.round <- as.integer(trunc(vector))
png(filename="hg.png", width=500, height=500)
plot(vector.round)
dev.off()
png(filename="mf.png", width=500, height=500)
plot(vector, type="o", col="blue", xlab="Preguntas", ylab="Respuesta media",
main="Valores medios de las respuestas a las preguntas basadas
en los principios de la CCP")
dev.off()
dev.off()
# Grouped Histogram of the answer values
vector.round <- as.integer(trunc(vector))
png(filename="hg.png", width=500, height=500)
hist(vector.round)
dev.off()
# Plot of the input values linear function form
png(filename="mf.png", width=500, height=500)
plot(vector, type="o", col="blue", xlab="Preguntas", ylab="Respuesta media",
main="Valores medios de las respuestas a las preguntas basadas
en los principios de la CCP")
dev.off()
# Grouped Histogram of the answer values
vector.round <- as.integer(trunc(vector))
png(filename="hg.png", width=500, height=500)
hist(vector.round)
dev.off()
# Plot of the input values linear function form
png(filename="mf.png", width=500, height=500)
plot(vector, type="o", col="blue", xlab="Preguntas", ylab="Respuesta media",
main="Valores medios de las respuestas a las preguntas basadas
en los principios de la CCP")
dev.off()
# Grouped Histogram of the answer values
vector.round <- as.integer(trunc(vector))
png(filename="hg.png", width=500, height=500)
hist(vector.round)
dev.off()
hcFIS <<- newFIS("hcFIS")
#install.packages('FuzzyToolkitUoN')
if (!'FuzzyToolkitUoN' %in% installed.packages()){
install.packages('FuzzyToolkitUoN')
}
library(FuzzyToolkitUoN)
hcFIS <<- newFIS("hcFIS")
showFIS(hcFIS)
humanFocus <<- gaussMF("humanFocus", 0:15, c(1.5,5,1))
hcFIS <<- addVar(hcFIS, "input", "hc", 0:15)
hcFIS <<- addMF(hcFIS, "input", 1, humanFocus)
plotMF(hcFIS, "input", 1)
removeVar(hcFIS, "input", 1)
showFIS(tippertest())
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
low.centered <<- gaussMF("low.centered", 1:15, c(1.5,0,1))
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 2)
showFIS(hcFIS)
removeVar(hcFIS, "input", 1)
showFIS(hcFIS)
rm(hcFIS)
rm(humanFocus)
rm(low.centered)
hcFIS <<- newFIS("hcFIS")
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
showFIS(hcFIS)
notCentered <<- gaussMF("notCentered", 1:15, c(1.5,0,1))
neutralCentered <<- gaussMF("notCentered", 1:15, c(1.5,6.5,1))
rm(neutralCentered)
neutralCentered <<- gaussMF("neutralCentered", 1:15, c(1.5,6.5,1))
Centered <<- gaussMF("Centered", 1:15, c(1.5,15.5,1))
hcFIS <<- addMF(hcFIS, "input", 1, notCentered)
hcFIS <<- addMF(hcFIS, "input", 1, neutralCentered)
hcFIS <<- addMF(hcFIS, "input", 1, Centered)
plotMF(hcFIS, "input", 1)
rm(hcFIS)
rm(Centered, neutralCentered, notCentered)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(1.5,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15.5,1))
hcFIS <<- addMF(hcFIS, "input", 1, notCentered)
hcFIS <<- addMF(hcFIS, "input", 1, neutralCentered)
hcFIS <<- addMF(hcFIS, "input", 1, Centered)
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
plotMF(hcFIS, "input", 1)
rm(hcFIS, neutralc, notc, yesc)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15.5,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 1)
showFIS(hcFIS)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,8,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
plotMF(hcFIS, "input", 2)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
plotMF(hcFIS, "input", 1)
plotMF(hcFIS, "input", 2)
round(1.9)
round(1.1)
vector <- c(1.1, 2.3, 4.1)
vector.round <- round(vector)
plot(vector.round)
showFIS(tippertest(), "output", 1)
plotFIS(tippertest(), "output", 1)
plotMF(tippertest(), "output", 1)
hostile <<- triMF("hostile", 1:15, c(0,1.5,3,1))
aversive <<- triMF("aversive", 1:15, c(3,1.5,6,1))
neutral <<- triMF("neutral", 1:15, c(6,1.5,9,1))
friendly <<- triMF("friendly", 1:15, c(9,1.5,12,1))
human.centered <<- triMF("human.centered", 1:15, c(12,1.5,15,1))
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
> hostile <<- triMF("hostile", 1:15, c(0,1.5,3,1))
> aversive <<- triMF("aversive", 1:15, c(3,1.5,6,1))
> neutral <<- triMF("neutral", 1:15, c(6,1.5,9,1))
> friendly <<- triMF("friendly", 1:15, c(9,1.5,12,1))
> human.centered <<- triMF("human.centered", 1:15, c(12,1.5,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(0,1.5,3,1))
aversive <<- triMF("aversive", 1:15, c(3,1.5,6,1))
neutral <<- triMF("neutral", 1:15, c(6,1.5,9,1))
friendly <<- triMF("friendly", 1:15, c(9,1.5,12,1))
human.centered <<- triMF("human.centered", 1:15, c(12,1.5,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(0,1,3,1))
aversive <<- triMF("aversive", 1:15, c(3,1,6,1))
neutral <<- triMF("neutral", 1:15, c(6,1,9,1))
friendly <<- triMF("friendly", 1:15, c(9,1,12,1))
human.centered <<- triMF("human.centered", 1:15, c(12,1,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
showFIS(hcFIS)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
hcFIS <<- addVar(hcFIS, "output", "result", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(0,1.5,3,1))
aversive <<- triMF("aversive", 1:15, c(3,1.5,6,1))
neutral <<- triMF("neutral", 1:15, c(6,1.5,9,1))
friendly <<- triMF("friendly", 1:15, c(9,1.5,12,1))
human.centered <<- triMF("human.centered", 1:15, c(12,1.5,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "outpu", 1)
plotMF(hcFIS, "output", 1)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
hcFIS <<- addVar(hcFIS, "output", "result", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(1,1.5,4,1))
aversive <<- triMF("aversive", 1:15, c(3,1.5,6,1))
neutral <<- triMF("neutral", 1:15, c(5,1.5,9,1))
friendly <<- triMF("friendly", 1:15, c(8,1.5,12,1))
human.centered <<- triMF("human.centered", 1:15, c(11,1.5,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
hcFIS <<- addVar(hcFIS, "output", "result", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(1,2,4,1))
aversive <<- triMF("aversive", 1:15, c(3,4.5,6,1))
neutral <<- triMF("neutral", 1:15, c(5,6,9,1))
friendly <<- triMF("friendly", 1:15, c(8,9,12,1))
human.centered <<- triMF("human.centered", 1:15, c(11,14,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
# Fuzzy Item Structure set up
# · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · · #
# FIS instantiation
hcFIS <<- newFIS("hcFIS")
# Add variables
hcFIS <<- addVar(hcFIS, "input", "hc", 1:15)
hcFIS <<- addVar(hcFIS, "input", "hh", 1:15)
hcFIS <<- addVar(hcFIS, "output", "result", 1:15)
# Create and add Input Memebership functions (human centeredness)
notc <<- gaussMF("notc", 1:15, c(2,0,1))
neutralc <<- gaussMF("neutralc", 1:15, c(2,7,1))
yesc <<- gaussMF("yesc", 1:15, c(2,15,1))
hcFIS <<- addMF(hcFIS, "input", 1, notc)
hcFIS <<- addMF(hcFIS, "input", 1, neutralc)
hcFIS <<- addMF(hcFIS, "input", 1, yesc)
noth <<- gaussMF("noth", 1:15, c(3,0,1))
# Create and add Input Memebership functions (human hostile)
noth <<- gaussMF("noth", 1:15, c(1.5,0,1))
neutralh <<- gaussMF("neutralh", 1:15, c(2.5,5,1))
yesh <<- gaussMF("yesh", 1:15, c(4,15,1))
hcFIS <<- addMF(hcFIS, "input", 2, noth)
hcFIS <<- addMF(hcFIS, "input", 2, neutralh)
hcFIS <<- addMF(hcFIS, "input", 2, yesh)
# Add output Fuzzy sets
hostile <<- triMF("hostile", 1:15, c(1,2,4,1))
aversive <<- triMF("aversive", 1:15, c(3,4,6,1))
neutral <<- triMF("neutral", 1:15, c(5,6,9,1))
friendly <<- triMF("friendly", 1:15, c(8,9,12,1))
human.centered <<- triMF("human.centered", 1:15, c(11,14,15,1))
hcFIS <<- addMF(hcFIS, "output", 1, hostile)
hcFIS <<- addMF(hcFIS, "output", 1, aversive)
hcFIS <<- addMF(hcFIS, "output", 1, neutral)
hcFIS <<- addMF(hcFIS, "output", 1, friendly)
hcFIS <<- addMF(hcFIS, "output", 1, human.centered)
plotMF(hcFIS, "output", 1)
showFIS(tippertest())
showFIS(hcFIS)
plotMF(tippertest(), "input", 1)
plotMF(tippertest(), "input", 2)
plotMF(tippertest(), "output", 1)
showFIS(tippertest())
plotMF(tippertest(), "input", 1)
showFIS(hcFIS)
# Add rules
hcFIS <<- addRule(hcFIS, c(1,1,3,1,1))
hcFIS <<- addRule(hcFIS, c(1,2,2,1,1))
hcFIS <<- addRule(hcFIS, c(1,3,1,1,1))
hcFIS <<- addRule(hcFIS, c(2,1,4,1,1))
hcFIS <<- addRule(hcFIS, c(2,2,3,1,1))
hcFIS <<- addRule(hcFIS, c(2,3,2,1,1))
hcFIS <<- addRule(hcFIS, c(3,1,5,1,1))
hcFIS <<- addRule(hcFIS, c(3,2,4,1,1))
hcFIS <<- addRule(hcFIS, c(3,3,3,1,1))
showFIS(hcFIS)
showFIS(tippertest())
Values <<- evalMF(1:10, c(1.5, 5, 1), "gaussMF")
Values
MyMatrix <<- matrix((1:2),1,2)
MyMAtrix
MyMatrix
FIS <<- tippertest()
evalFIS(MyMatrix, FIS)
MyMatrix <<- matrix((1:15),1,2)
MyMatrix <<- matrix((1:2),1,3)
MyMatrix <<- matrix((1:3),1,2)
MyMatrix <<- matrix((1:3),1,2,4)
MyMatrix <<- matrix((1:3),1,2,3)
MyMatrix <<- matrix((1:2),1,2,3)
MyMatrix
a <- c(1.3, 1.2, 5.6)
a <- as.integer(a)
a
v <- c(1, 3, 4.4)
v <- as.matrix(v)
v
evalFIS(v, hcFIS)
evalFIS(v, hcFIS, 4)
a <- c(1.3, 1.2, 5.6)
evalFIS(a, hcFIS)
plot(evalFIS(vector, hcFIS))
evalFIS(vector, hcFIS)
plot(evalFIS(a, hcFIS))
